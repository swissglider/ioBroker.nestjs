name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
    push:
        branches:
            - 'main'
        # tags:
        #     # normal versions
        #     - 'v[0-9]+.[0-9]+.[0-9]+'
        #     # pre-releases
        #     - 'v[0-9]+.[0-9]+.[0-9]+-**'
    pull_request: {}

jobs:
    # Performs quick checks before the expensive test runs
    check-and-lint:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        runs-on: ubuntu-latest

        steps:
            - uses: ioBroker/testing-action-check@v1
              with:
                  node-version: '14.x'
                  # Uncomment the following line if your adapter cannot be installed using 'npm ci'
                  # install-command: 'npm install'
                  type-checking: true
                  lint: true

    # Runs adapter tests on all supported node versions and OSes
    adapter-tests:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                # node-version: [12.x, 14.x, 16.x]
                # os: [ubuntu-latest, windows-latest, macos-latest]
                node-version: [14.x]
                os: [ubuntu-latest]

        steps:
            - uses: ioBroker/testing-action-adapter@v1
              with:
                  node-version: ${{ matrix.node-version }}
                  os: ${{ matrix.os }}
                  # Uncomment the following line if your adapter cannot be installed using 'npm ci'
                  # install-command: 'npm install'
                  build: true

    # TODO: To enable automatic npm releases, create a token on npmjs.org
    # Enter this token as a GitHub secret (with name NPM_TOKEN) in the repository options
    # Then uncomment the following block:

    # Deploys the final package to NPM
    deploy:
        needs: [check-and-lint, adapter-tests]

        # Trigger this step only when a commit on any branch is tagged with a version number
        #  if: |
        #    contains(github.event.head_commit.message, '[skip ci]') == false &&
        #    github.event_name == 'push' &&
        #    startsWith(github.ref, 'refs/tags/v')

        runs-on: ubuntu-latest

        steps:
            - uses: ioBroker/testing-action-deploy@v1
              with:
                  node-version: '14.x'
                  # Uncomment the following line if your adapter cannot be installed using 'npm ci'
                  # install-command: 'npm install'
                  build: true
                  npm-token: ${{ secrets.NPM_TOKEN }}
                  github-token: ${{ secrets.GITHUB_TOKEN }}

    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js 14.x
              uses: actions/setup-node@v1
              with:
                  node-version: 14.x
            - run: npm ci
            - run: npm run lint
            - run: npm test

    package:
        needs: [build]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js 14.x
              uses: actions/setup-node@v1
              with:
                  node-version: 14.x

            - run: npm ci
            - run: npm version prerelease --preid=ci-$GITHUB_RUN_ID --no-git-tag-version
            - run: npm pack
            - name: Upload
              uses: actions/upload-artifact@v2
              with:
                  name: package
                  path: '*.tgz'

    publish:
        name: 'Publish to GitHub Packages'
        needs: [package]
        runs-on: ubuntu-latest
        if: github.repository_owner == 'swissglider'

        steps:
            - name: Upload
              uses: actions/download-artifact@v2
              with:
                  name: package
            - uses: actions/setup-node@v1
              with:
                  node-version: 14.x
                  registry-url: https://npm.pkg.github.com/
                  scope: '@swissglider'
            - run: echo "registry=https://npm.pkg.github.com/@swissglider" >> .npmrc
            - run: npm publish $(ls *.tgz)
              env:
                  NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
